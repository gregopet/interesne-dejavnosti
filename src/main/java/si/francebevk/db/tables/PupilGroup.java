/*
 * This file is generated by jOOQ.
*/
package si.francebevk.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import si.francebevk.db.Keys;
import si.francebevk.db.Public;
import si.francebevk.db.tables.records.PupilGroupRecord;


/**
 * A class of pupils
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PupilGroup extends TableImpl<PupilGroupRecord> {

    private static final long serialVersionUID = -1393866364;

    /**
     * The reference instance of <code>public.pupil_group</code>
     */
    public static final PupilGroup PUPIL_GROUP = new PupilGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PupilGroupRecord> getRecordType() {
        return PupilGroupRecord.class;
    }

    /**
     * The column <code>public.pupil_group.name</code>.
     */
    public final TableField<PupilGroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>public.pupil_group.year</code>.
     */
    public final TableField<PupilGroupRecord, Short> YEAR = createField("year", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>public.pupil_group</code> table reference
     */
    public PupilGroup() {
        this(DSL.name("pupil_group"), null);
    }

    /**
     * Create an aliased <code>public.pupil_group</code> table reference
     */
    public PupilGroup(String alias) {
        this(DSL.name(alias), PUPIL_GROUP);
    }

    /**
     * Create an aliased <code>public.pupil_group</code> table reference
     */
    public PupilGroup(Name alias) {
        this(alias, PUPIL_GROUP);
    }

    private PupilGroup(Name alias, Table<PupilGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private PupilGroup(Name alias, Table<PupilGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "A class of pupils");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PupilGroupRecord> getPrimaryKey() {
        return Keys.PUPIL_GROUP_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PupilGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<PupilGroupRecord>>asList(Keys.PUPIL_GROUP_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilGroup as(String alias) {
        return new PupilGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilGroup as(Name alias) {
        return new PupilGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PupilGroup rename(String name) {
        return new PupilGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PupilGroup rename(Name name) {
        return new PupilGroup(name, null);
    }
}
