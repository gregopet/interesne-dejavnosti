/*
 * This file is generated by jOOQ.
*/
package si.francebevk.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import si.francebevk.db.tables.PupilGroup;


/**
 * A class of pupils
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PupilGroupRecord extends UpdatableRecordImpl<PupilGroupRecord> implements Record2<String, Short> {

    private static final long serialVersionUID = 936519747;

    /**
     * Setter for <code>public.pupil_group.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pupil_group.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.pupil_group.year</code>.
     */
    public void setYear(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pupil_group.year</code>.
     */
    public Short getYear() {
        return (Short) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Short> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Short> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return PupilGroup.PUPIL_GROUP.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return PupilGroup.PUPIL_GROUP.YEAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilGroupRecord value1(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilGroupRecord value2(Short value) {
        setYear(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilGroupRecord values(String value1, Short value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PupilGroupRecord
     */
    public PupilGroupRecord() {
        super(PupilGroup.PUPIL_GROUP);
    }

    /**
     * Create a detached, initialised PupilGroupRecord
     */
    public PupilGroupRecord(String name, Short year) {
        super(PupilGroup.PUPIL_GROUP);

        set(0, name);
        set(1, year);
    }
}
