/*
 * This file is generated by jOOQ.
*/
package si.francebevk.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import si.francebevk.db.tables.PupilActivity;


/**
 * A mapping table between pupils and their chosen activities
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PupilActivityRecord extends UpdatableRecordImpl<PupilActivityRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1248783530;

    /**
     * Setter for <code>public.pupil_activity.pupil_id</code>.
     */
    public void setPupilId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pupil_activity.pupil_id</code>.
     */
    public Long getPupilId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pupil_activity.activity_id</code>.
     */
    public void setActivityId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pupil_activity.activity_id</code>.
     */
    public Long getActivityId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PupilActivity.PUPIL_ACTIVITY.PUPIL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return PupilActivity.PUPIL_ACTIVITY.ACTIVITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getPupilId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getActivityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPupilId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getActivityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilActivityRecord value1(Long value) {
        setPupilId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilActivityRecord value2(Long value) {
        setActivityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilActivityRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PupilActivityRecord
     */
    public PupilActivityRecord() {
        super(PupilActivity.PUPIL_ACTIVITY);
    }

    /**
     * Create a detached, initialised PupilActivityRecord
     */
    public PupilActivityRecord(Long pupilId, Long activityId) {
        super(PupilActivity.PUPIL_ACTIVITY);

        set(0, pupilId);
        set(1, activityId);
    }
}
