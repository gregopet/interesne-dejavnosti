/*
 * This file is generated by jOOQ.
*/
package si.francebevk.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;

import si.francebevk.db.enums.DayOfWeek;
import si.francebevk.db.tables.ActivitySlots;


/**
 * All the various slots belonging to activities
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivitySlotsRecord extends TableRecordImpl<ActivitySlotsRecord> implements Record4<Long, DayOfWeek, Short, Short> {

    private static final long serialVersionUID = 2019450690;

    /**
     * Setter for <code>public.activity_slots.activity_id</code>.
     */
    public void setActivityId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.activity_slots.activity_id</code>.
     */
    public Long getActivityId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.activity_slots.day</code>.
     */
    public void setDay(DayOfWeek value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.activity_slots.day</code>.
     */
    public DayOfWeek getDay() {
        return (DayOfWeek) get(1);
    }

    /**
     * Setter for <code>public.activity_slots.start_minutes</code>.
     */
    public void setStartMinutes(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.activity_slots.start_minutes</code>.
     */
    public Short getStartMinutes() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.activity_slots.end_minutes</code>.
     */
    public void setEndMinutes(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.activity_slots.end_minutes</code>.
     */
    public Short getEndMinutes() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, DayOfWeek, Short, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, DayOfWeek, Short, Short> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ActivitySlots.ACTIVITY_SLOTS.ACTIVITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<DayOfWeek> field2() {
        return ActivitySlots.ACTIVITY_SLOTS.DAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return ActivitySlots.ACTIVITY_SLOTS.START_MINUTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return ActivitySlots.ACTIVITY_SLOTS.END_MINUTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getActivityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DayOfWeek component2() {
        return getDay();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getStartMinutes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getEndMinutes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getActivityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DayOfWeek value2() {
        return getDay();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getStartMinutes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getEndMinutes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivitySlotsRecord value1(Long value) {
        setActivityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivitySlotsRecord value2(DayOfWeek value) {
        setDay(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivitySlotsRecord value3(Short value) {
        setStartMinutes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivitySlotsRecord value4(Short value) {
        setEndMinutes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivitySlotsRecord values(Long value1, DayOfWeek value2, Short value3, Short value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActivitySlotsRecord
     */
    public ActivitySlotsRecord() {
        super(ActivitySlots.ACTIVITY_SLOTS);
    }

    /**
     * Create a detached, initialised ActivitySlotsRecord
     */
    public ActivitySlotsRecord(Long activityId, DayOfWeek day, Short startMinutes, Short endMinutes) {
        super(ActivitySlots.ACTIVITY_SLOTS);

        set(0, activityId);
        set(1, day);
        set(2, startMinutes);
        set(3, endMinutes);
    }
}
