/*
 * This file is generated by jOOQ.
*/
package si.francebevk.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import si.francebevk.db.enums.AuthorizedPersonType;
import si.francebevk.db.tables.AuthorizedCompanion;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorizedCompanionRecord extends UpdatableRecordImpl<AuthorizedCompanionRecord> implements Record4<Integer, Long, String, AuthorizedPersonType> {

    private static final long serialVersionUID = -1490363160;

    /**
     * Setter for <code>public.authorized_companion.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.authorized_companion.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.authorized_companion.pupil_id</code>. Reference to the pupil whom these persons will pick up
     */
    public void setPupilId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.authorized_companion.pupil_id</code>. Reference to the pupil whom these persons will pick up
     */
    public Long getPupilId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.authorized_companion.name</code>. Name of the person who will pick up the pupil
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.authorized_companion.name</code>. Name of the person who will pick up the pupil
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.authorized_companion.type</code>. The family tie to the pupil
     */
    public void setType(AuthorizedPersonType value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.authorized_companion.type</code>. The family tie to the pupil
     */
    public AuthorizedPersonType getType() {
        return (AuthorizedPersonType) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Long, String, AuthorizedPersonType> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Long, String, AuthorizedPersonType> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AuthorizedCompanion.AUTHORIZED_COMPANION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return AuthorizedCompanion.AUTHORIZED_COMPANION.PUPIL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return AuthorizedCompanion.AUTHORIZED_COMPANION.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<AuthorizedPersonType> field4() {
        return AuthorizedCompanion.AUTHORIZED_COMPANION.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getPupilId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizedPersonType component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getPupilId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizedPersonType value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizedCompanionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizedCompanionRecord value2(Long value) {
        setPupilId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizedCompanionRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizedCompanionRecord value4(AuthorizedPersonType value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizedCompanionRecord values(Integer value1, Long value2, String value3, AuthorizedPersonType value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorizedCompanionRecord
     */
    public AuthorizedCompanionRecord() {
        super(AuthorizedCompanion.AUTHORIZED_COMPANION);
    }

    /**
     * Create a detached, initialised AuthorizedCompanionRecord
     */
    public AuthorizedCompanionRecord(Integer id, Long pupilId, String name, AuthorizedPersonType type) {
        super(AuthorizedCompanion.AUTHORIZED_COMPANION);

        set(0, id);
        set(1, pupilId);
        set(2, name);
        set(3, type);
    }
}
