/*
 * This file is generated by jOOQ.
*/
package si.francebevk.db.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import si.francebevk.db.tables.Pupil;


/**
 * Contains a single pupil
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PupilRecord extends UpdatableRecordImpl<PupilRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = 1131233207;

    /**
     * Setter for <code>public.pupil.id</code>. The pupil's unique ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pupil.id</code>. The pupil's unique ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pupil.name</code>. The pupil's name
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pupil.name</code>. The pupil's name
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.pupil.pupil_group</code>. The pupil's class
     */
    public void setPupilGroup(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.pupil.pupil_group</code>. The pupil's class
     */
    public String getPupilGroup() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.pupil.access_code</code>. The pupil's access code required to access their profile
     */
    public void setAccessCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.pupil.access_code</code>. The pupil's access code required to access their profile
     */
    public String getAccessCode() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Pupil.PUPIL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Pupil.PUPIL.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Pupil.PUPIL.PUPIL_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Pupil.PUPIL.ACCESS_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPupilGroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getAccessCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPupilGroup();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAccessCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilRecord value3(String value) {
        setPupilGroup(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilRecord value4(String value) {
        setAccessCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PupilRecord
     */
    public PupilRecord() {
        super(Pupil.PUPIL);
    }

    /**
     * Create a detached, initialised PupilRecord
     */
    public PupilRecord(Long id, String name, String pupilGroup, String accessCode) {
        super(Pupil.PUPIL);

        set(0, id);
        set(1, name);
        set(2, pupilGroup);
        set(3, accessCode);
    }
}
