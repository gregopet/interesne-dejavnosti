/*
 * This file is generated by jOOQ.
*/
package si.francebevk.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import si.francebevk.db.Keys;
import si.francebevk.db.Public;
import si.francebevk.db.tables.records.PupilActivityRecord;


/**
 * A mapping table between pupils and their chosen activities
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PupilActivity extends TableImpl<PupilActivityRecord> {

    private static final long serialVersionUID = 56955565;

    /**
     * The reference instance of <code>public.pupil_activity</code>
     */
    public static final PupilActivity PUPIL_ACTIVITY = new PupilActivity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PupilActivityRecord> getRecordType() {
        return PupilActivityRecord.class;
    }

    /**
     * The column <code>public.pupil_activity.pupil_id</code>.
     */
    public final TableField<PupilActivityRecord, Long> PUPIL_ID = createField("pupil_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.pupil_activity.activity_id</code>.
     */
    public final TableField<PupilActivityRecord, Long> ACTIVITY_ID = createField("activity_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.pupil_activity</code> table reference
     */
    public PupilActivity() {
        this(DSL.name("pupil_activity"), null);
    }

    /**
     * Create an aliased <code>public.pupil_activity</code> table reference
     */
    public PupilActivity(String alias) {
        this(DSL.name(alias), PUPIL_ACTIVITY);
    }

    /**
     * Create an aliased <code>public.pupil_activity</code> table reference
     */
    public PupilActivity(Name alias) {
        this(alias, PUPIL_ACTIVITY);
    }

    private PupilActivity(Name alias, Table<PupilActivityRecord> aliased) {
        this(alias, aliased, null);
    }

    private PupilActivity(Name alias, Table<PupilActivityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "A mapping table between pupils and their chosen activities");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PupilActivityRecord> getPrimaryKey() {
        return Keys.PUPIL_ACTIVITY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PupilActivityRecord>> getKeys() {
        return Arrays.<UniqueKey<PupilActivityRecord>>asList(Keys.PUPIL_ACTIVITY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PupilActivityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PupilActivityRecord, ?>>asList(Keys.PUPIL_ACTIVITY__PUPIL_ACTIVITY_PUPIL_ID_FKEY, Keys.PUPIL_ACTIVITY__PUPIL_ACTIVITY_ACTIVITY_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilActivity as(String alias) {
        return new PupilActivity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PupilActivity as(Name alias) {
        return new PupilActivity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PupilActivity rename(String name) {
        return new PupilActivity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PupilActivity rename(Name name) {
        return new PupilActivity(name, null);
    }
}
